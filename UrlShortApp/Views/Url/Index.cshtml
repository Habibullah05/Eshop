
@using UrlShortApp.ViewModels
@model AddUrlViewModel
@{
    ViewBag.Title = "URL shortener";
}



<form asp-controller="Url" asp-action="Index" method="post">
    @if (Model?.ShortURL != null)
    {
        <p>You link is <a href="@Model.ShortURL"> @Model.ShortURL </a></p>

    }
    <input type="hidden" name="returnUrl" value="model" />
    <div class="text-dark" asp-validation-summary="All"></div>
    <div class="form-group">
        <label asp-for="LongUrl"></label>
        <input asp-for="LongUrl" class="form-control">
        <span asp-validation-for="LongUrl" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Hash"></label>
        <input asp-for="Hash" class="form-control">
        <span asp-validation-for="Hash" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</form>


@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
}

@*<h2>Shorten a URL</h2>

    @Html.ValidationSummary()*@

@* @using (Html.BeginForm())
        {
            <div class="form-group">
                @Html.TextBoxFor(model => model.LongUrl, new { placeholder = "URL you would like to have shortened", @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.TextBoxFor(model => model.ShortURL, new { placeholder = "If you like, fill in a custom word for your short URL", @class = "form-control" })
            </div>

            if (!string.IsNullOrEmpty(Model.ShortURL))
            {
                <div>
                    <h3><a href="@Model.ShortURL" target="_blank">@Model.ShortURL</a></h3>
                </div>
            }

    }
            <input type="submit" class="btn btn-primary" value="Shorten" />*@
